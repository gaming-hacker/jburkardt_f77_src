C  THIS IS MTH:CWGODE.HLP AS OF 29 SEPTEMBER 1986,
C  A HELP FILE FOR MTH:CWGODE,
C  A PACKAGE OF THE THREE CODES BY C WILLIAM GEAR FOR
C  ORDINARY DIFFERENIAL EQUATIONS, CONTAINING
C
C  SRKODE - SINGLE PRECISION RUNGE-KUTTA METHOD
C  SPRODE - SINGLE PRECISION POLYNOMIAL/RATIONAL FUNCTION METHOD
C  SMVODE - SINGLE PRECISION ADAMS-BASHFORTH/STIFF EQUATION SOLVER
C
C  REFERENCE
C
C  C WILLIAM GEAR,
C  NUMERICAL INITIAL VALUE PROBLEMS IN ORDINARY DIFFERENTIAL EQUATIONS,
C  PRENTICE HALL, 1971.
C
C***********************************************************************
C
      SUBROUTINE SRKODE(N,T,TOUT,Y,HMIN,EPS,ERROR,KFLAG,JSTART,YPRIME)
C
C***********************************************************************
C
C  SRKODE USES A RUNGE-KUTTA METHOD OF ORDER FOUR TO INTEGRATE A
C  SYSTEM OF FIRST ORDER DIFFERENTIAL EQUATIONS.
C
C  SRKODE IS THE SINGLE PRECISION VERSION OF THE CODE.
C
C  ARGUMENTS
C
C
C  N      - THE NUMBER OF FIRST ORDER DIFFERENTIAL EQUATIONS TO BE
C           SOLVED.  N MUST BE GREATER THAN 0 AND LESS THAN OR EQUAL
C           TO 20.
C
C  T      - THE CURRENT VALUE OF THE INDEPENDENT VARIABLE.
C
C  TOUT   - A POINT AT WHICH THE SOLUTION Y IS DESIRED.  SRKODE WILL
C           PROBABLY COMPUTE SEVERAL INTERMEDIATE POINTS BEFORE IT
C           RETURNS WITH THE VALUE OF THE SOLUTION AT THIS POINT.
C           TOUT MUST BE AT LEAST HMIN AWAY FROM T.
C
C  Y      - A VECTOR OF DIMENSION N WHICH CONTAINS THE VALUES OF THE
C           DEPENDENT VARIABLES.
C
C  HMIN   - THE MAGNITUDE (IGNORING SIGN) OF THE SMALLEST STEPSIZE
C           THAT THE USER WILL ALLOW THE CODE TO TAKE.
C           HMIN SHOULD BE POSITIVE.
C
C  EPS    - THE ERROR TEST CONSTANT.  THE CODE ESTIMATES THE ERROR
C           THAT IT MAKES.  FOR EACH COMPONENT OF THE SOLUTION, THE
C           ESTIMATED ERROR IS REQUIRED TO BE LESS THAN EPS*YMAX(I),
C           WHERE YMAX(I) IS THE LARGER OF 1.0 AND THE LARGEST
C           MAGNITUDE OF Y(I) SEEN SO FAR.  EPS SHOULD BE POSITIVE.
C
C  ERROR  - A VECTOR OF DIMENSION N, WHICH CONTAINS THE ESTIMATED
C           SINGLE STEP ERROR FOR EACH COMPONENT.
C
C  KFLAG  - A COMPLETION CODE WITH THE FOLLOWING MEANINGS-
C
C           IF KFLAG= -1 ON RETURN, THE SMALLEST POSSIBLE
C           STEP (ABS(H)=HMIN) WAS TAKEN, THOUGH THE REQUESTED ERROR
C           WAS NOT ACHIEVED.  INTEGRATION MAY PROCEED, BUT THE RESULTS
C           ARE NOT GUARANTEED.
C
C           IF KFLAG= +1 ON RETURN, THE REQUESTED ERROR WAS ACHIEVED,
C           WITH A STEPSIZE H OF MAGNITUDE AT LEAST HMIN.
C
C  JSTART - AN INITIALIZATION INDICATOR SET BY THE USER WITH THE
C           FOLLOWING MEANINGS-
C
C           JSTART=  0, THIS IS THE FIRST CALL TO SRKODE FOR THIS
C           PROBLEM.  ALWAYS CALL FIRST WITH JSTART=0 SO THAT SRKODE
C           CAN INITIALIZE ITSELF.
C
C           JSTART= +1, THE RESULTS OF THE LAST STEP ARE ACCEPTABLE,
C           PLEASE TAKE THE NEXT STEP.
C
C  YPRIME - AN EXTERNAL QUANTITY (THAT IS, THE NAME OF A SUBROUTINE
C           WHICH IS PASSED AS AN ARGUMENT TO THIS SUBROUTINE).
C           IT IS THE NAME OF THE USER-PROVIDED SUBROUTINE WHICH
C           EVALUATES THE VECTOR OF DERIVATIVES THAT DEFINE THE ODE.
C           THE SUBROUTINE MAY HAVE ANY NAME THE USER LIKES.  THAT
C           NAME MUST APPEAR IN AN EXTERNAL STATEMENT IN THE
C           CALLING PROGRAM, AND IN THE YPRIME POSITION IN THE
C           CALL TO SRKODE.  THE SUBROUTINE MUST HAVE THE FOLLOWING
C           FORM (FOR THIS EXAMPLE, WE ASSUME THE NAME OF THE SUBROUTINE
C           IS DIFFUN AND THAT THERE ARE 10 ODE'S.)
C
C           SUBROUTINE DIFFUN(T,Y,DY,N)
C           DIMENSION Y(N)
C           DIMENSION DY(N)
C
C           (FOR THE GIVEN T AND Y THAT ARE INPUT, EVALUATE DY)
C           DY(1)=...
C           DY(2)=...
C
C           DY(10)=...
C           RETURN
C           END
C
C
C  CALLING THE PROGRAM
C
C
C  YOU MUST HAVE AN EXTERNAL STATEMENT IN THE PROGRAM WHICH CALLS
C  THIS PROGRAM, DECLARING THE NAME OF YOUR DERIVATIVE ROUTINE WHICH
C  YOU WILL BE USING.
C
C  YOU MUST HAVE DIMENSION STATEMENTS IN YOUR PROGRAM FOR
C  ERROR, AND Y, GIVING THEM AT LEAST AS MUCH SPACE
C  AS DESCRIBED ABOVE.
C
C  YOU MUST SET THE VALUES OF T AND TOUT AND THE CORRESPONDING VALUES OF
C  Y BEFORE CALLING.
C
C  YOU SHOULD SET A POSITIVE VALUE TO EPS, HMIN, AND N.
C  YOU SHOULD SET JSTART=0 ON FIRST CALL.
C
C  THEREAFTER, IF THE RESULTS OF THE CURRENT STEP ARE SATISFACTORY,
C  DON'T CHANGE ANYTHING EXCEPT TOUT, WHICH YOU SHOULD INCREASE
C  (OR DECREASE) TO THE NEXT VALUE AT WHICH A SOLUTION IS DESIRED.
C  THEN JUST CALL THE PROGRAM AGAIN TO GET THE NEXT SOLUTION VALUE.
C
C***********************************************************************
C
      SUBROUTINE SPRODE(N,T,TOUT,Y,HMIN,EPS,MF,ERROR,KFLAG,
     1 JSTART,YPRIME)
C
C***********************************************************************
C
C  THIS SUBROUTINE USES POLYNOMIAL OR RATIONAL FUNCTION APPROXIMATION
C  TO SOLVE A SYSTEM OF FIRST ORDER DIFFERENTIAL EQUATIONS.
C  THIS IS THE SINGLE PRECISION VERSION.
C
C  SUBROUTINE PARAMETERS
C
C
C  N      - THE NUMBER OF FIRST ORDER DIFFERENTIAL EQUATIONS.
C           N MUST BE GREATER THAN 0 AND LESS THAN OR EQUAL TO 20.
C
C  T      - THE CURRENT VALUE OF THE INDEPENDENT VARIABLE.
C
C  TOUT   - THE NEXT VALUE OF T AT WHICH A SOLUTION IS DESIRED.
C           SPRODE WILL PROBABLY COMPUTE SEVERAL POINTS ON ITS WAY
C           TO TOUT.  ABS(TOUT-T) MUST BE GREATER THAN HMIN.
C
C  Y      - A VECTOR OF DIMENSION N CONTAINING THE CURRENT VALUES
C           OF THE DEPENDENT VARIABLES.
C
C  HMIN   - THE MINIMUM STEPSIZE THAT THE USER WILL ALLOW
C           THE SUBROUTINE TO TAKE.  HMIN MUST BE GREATER THAN ZERO.
C
C  EPS    - THE ERROR TEST CONSTANT.  THE ESTIMATED ERRORS
C           ARE REQUIRED TO BE LESS THAN EPS*YMAX(I) IN EACH
C           COMPONENT WHERE YMAX(I) IS THE LARGER OF 1.0 AND
C           THE MAXIMUM MAGNITUDE OF Y(I) SEEN SO FAR.
C           EPS MUST BE POSITIVE.
C
C  MF     - THE METHOD INDICATOR WHICH IS TO BE SELECTED BY
C           THE USER.  THE FOLLOWING ARE AVAILABLE-
C
C           MF=0 BULIRSCH-STOER RATIONAL EXTRAPOLATION
C           MF=1 POLYNOMIAL EXTRAPOLATION
C
C  ERROR  - A VECTOR OF SIZE N, CONTAINING AN ESTIMATE OF THE
C           ERROR IN THE I-TH SOLUTION COMPONENT.
C
C  KFLAG  - A COMPLETION CODE SET BY THE PROGRAM JUST
C           BEFORE IT RETURNS.  IT HAS THE FOLLOWING MEANINGS-
C
C           KFLAG=-1  THE STEP WAS TAKEN WITH ABS(H)=HMIN,
C           BUT THE REQUESTED ERROR WAS NOT ACHIEVED.
C           INTEGRATION MAY PROCEED BUT THE RESULTS ARE NOT
C           GUARANTEED.
C
C           KFLAG=+1  THE STEP WAS SUCCESSFUL.
C
C  JSTART - AN INITIALIZATION FLAG SET BY THE USER ON FIRST CALL,
C           AND ON ANY CALL WHERE THE USER FELT THE LAST STEP
C           WAS UNSATISFACTORY -
C
C           JSTART=0 THIS IS THE FIRST CALL TO SPRODE FOR
C           THIS PROBLEM.
C
C           JSTART=+1 THIS IS NOT THE FIRST CALL.  PLEASE TAKE A NEW
C           STEP, SINCE THE LAST ONE WAS ACCEPTABLE.
C
C  YPRIME - AN EXTERNAL QUANTITY (THAT IS, THE NAME OF A SUBROUTINE
C           WHICH IS PASSED AS AN ARGUMENT TO THIS SUBROUTINE).
C           IT IS THE NAME OF THE USER-PROVIDED SUBROUTINE WHICH
C           EVALUATES THE VECTOR OF DERIVATIVES THAT DEFINE THE ODE.
C           THE SUBROUTINE MAY HAVE ANY NAME THE USER LIKES.  THAT
C           NAME MUST APPEAR IN AN EXTERNAL STATEMENT IN THE
C           CALLING PROGRAM, AND IN THE YPRIME POSITION IN THE
C           CALL TO SPRODE.  THE SUBROUTINE MUST HAVE THE FOLLOWING
C           FORM (FOR THIS EXAMPLE, WE ASSUME THE NAME OF THE SUBROUTINE
C           IS DIFFUN AND THAT THERE ARE 10 ODE'S.)
C
C           SUBROUTINE DIFFUN(T,Y,DY,N)
C           DIMENSION Y(N)
C           DIMENSION DY(N)
C
C           (FOR THE GIVEN T AND Y THAT ARE INPUT, EVALUATE DY)
C           DY(1)=...
C           DY(2)=...
C
C           DY(10)=...
C           RETURN
C           END
C
C
C  CALLING THE PROGRAM
C
C
C  YOU MUST HAVE AN EXTERNAL STATEMENT IN THE PROGRAM WHICH CALLS
C  THIS PROGRAM, DECLARING THE NAME OF YOUR DERIVATIVE ROUTINE WHICH
C  YOU WILL BE USING.
C
C  YOU MUST HAVE DIMENSION STATEMENTS IN YOUR PROGRAM FOR
C  ERROR, AND Y, GIVING THEM AT LEAST AS MUCH SPACE
C  AS DESCRIBED ABOVE.
C
C  YOU MUST SET THE VALUES T AND TOUT, AND THE CORRESPONDING VALUES OF
C  Y BEFORE CALLING.
C  YOU SHOULD CHOOSE MF=0 OR MF=1.
C
C  YOU SHOULD SET A POSITIVE VALUE TO EPS, HMIN, AND N.
C  YOU SHOULD SET JSTART=0 ON FIRST CALL.
C
C  THEREAFTER, IF THE RESULTS OF THE CURRENT STEP ARE SATISFACTORY,
C  DON'T CHANGE ANYTHING EXCEPT THE VALUE OF TOUT, WHICH YOU SHOULD
C  INCREASE (OR DECREASE) TO THE NEXT VALUE AT WHICH A SOLUTION
C  IS DESIRED. THEN JUST CALL THE PROGRAM AGAIN TO GET THE
C  NEXT SOLUTION VALUE.
C
C***********************************************************************
C
      SUBROUTINE SMVODE(N,T,TOUT,Y,HMIN,EPS,MF,ERROR,KFLAG,
     1 JSTART,YPRIME,PARTY)
C
C***********************************************************************
C
C  SMVODE IS A MULTI-VALUE METHOD FOR SOLVING A SYSTEM OF
C  FIRST ORDER ORDINARY DIFFERENTIAL EQUATIONS.  THIS IS
C  THE SINGLE PRECISION VERSION.
C
C  THIS SUBROUTINE INTEGRATES A SET OF N ORDINARY DIFFERENTIAL FIRST
C  ORDER EQUATIONS USING A MULTIVALUE METHOD.
C
C
C  PARAMETERS
C
C
C  N      - THE NUMBER OF FIRST ORDER DIFFERENTIAL EQUATIONS.
C           N MUST BE GREATER THAN 0 AND LESS THAN OR EQUAL TO 20.
C
C  T      - THE CURRENT VALUE OF THE INDEPENDENT VARIABLE.
C
C  TOUT   - THE NEXT VALUE OF THE INDEPENDENT VARIABLE AT WHICH
C           A SOLUTION IS DESIRED.
C           ABS(TOUT-T) MUST BE GREATER THAN HMIN.
C
C  Y      - AN ARRAY OF N ENTRIES CONTAINING THE DEPENDENT VARIABLES
C
C  HMIN   - THE MINIMUM STEP SIZE THAT WILL BE USED FOR THE
C           INTEGRATION.  NOTE THAT ON STARTING THIS MUST BE
C           MUCH SMALLER THAN THE AVERAGE H EXPECTED SINCE
C           A FIRST ORDER METHOD IS USED INITIALLY.
C
C  MF     - THE METHOD INDICATOR.  THE FOLLOWING ARE ALLOWED..
C
C           0   AN ADAMS PREDICTOR CORRECTOR IS USED.
C
C           1   A MULTI-STEP METHOD SUITABLE FOR STIFF
C           SYSTEMS IS USED.  IT WILL ALSO WORK FOR
C           NON STIFF SYSTEMS.  HOWEVER THE USER
C           MUST PROVIDE A SUBROUTINE WHICH
C           EVALUATES THE PARTIAL DERIVATIVES OF
C           THE DIFFERENTIAL EQUATIONS WITH RESPECT
C           TO THE Y'S.  SEE DESCRIPTION OF PARTY BELOW.
C
C           2   THE SAME AS CASE 1, EXCEPT THAT THE
C           SUBROUTINE COMPUTES THE PARTIAL
C           DERIVATIVES BY NUMERICAL DIFFERENCING
C           OF THE DERIVATIVES.
C
C  ERROR  - AN ARRAY OF N ELEMENTS WHICH CONTAINS THE ESTIMATED
C           ONE STEP ERROR IN EACH COMPONENT.
C
C  KFLAG  - A COMPLETION CODE WITH THE FOLLOWING MEANINGS..
C
C           +1   THE STEP WAS SUCCESSFUL.
C           -1   THE STEP WAS TAKEN WITH H + HMIN, BUT THE
C           REQUESTED ERROR WAS NOT ACHIEVED.
C           -2  THE MAXIMUM ORDER SPECIFIED WAS FOUND TO
C           BE TOO LARGE.
C           -3   CORRECTOR CONVERGENCE COULD NOT BE
C           ACHIEVED FOR H .GT. HMIN.
C           -4   THE REQUESTED ERROR IS SMALLER THAN CAN
C           BE HANDLED FOR THIS PROBLEM.
C
C  JSTART - AN INPUT INDICATOR WITH THE FOLLOWING MEANINGS..
C
C           0   PERFORM THE FIRST STEP.  THE FIRST STEP
C           MUST BE DONE WITH THIS VALUE OF JSTART
C           SO THAT THE SUBROUTINE CAN INITIALIZE ITSELF.
C
C           +1 (OR ANY POSITIVE VALUE)   TAKE A NEW STEP CONTINUING FROM
C           THE LAST.  NOTE THAT ON RETURN, JSTART IS SET TO NQ,
C           THE CURRENT ORDER OF THE METHOD
C           AT EXIT.  NQ IS ALSO THE ORDER OF THE MAXIMUM
C           DERIVATIVE AVAILABLE.
C
C  YPRIME - AN EXTERNAL QUANTITY (THAT IS, THE NAME OF A SUBROUTINE
C           WHICH IS PASSED AS AN ARGUMENT TO THIS SUBROUTINE).
C           IT IS THE NAME OF THE USER-PROVIDED SUBROUTINE WHICH
C           EVALUATES THE VECTOR OF DERIVATIVES THAT DEFINE THE ODE.
C           THE SUBROUTINE MAY HAVE ANY NAME THE USER LIKES.  THAT
C           NAME MUST APPEAR IN AN EXTERNAL STATEMENT IN THE
C           CALLING PROGRAM, AND IN THE YPRIME POSITION IN THE
C           CALL TO SMVODE.  THE SUBROUTINE MUST HAVE THE FOLLOWING
C           FORM (FOR THIS EXAMPLE, WE ASSUME THE NAME OF THE SUBROUTINE
C           IS DIFFUN AND THAT THERE ARE 10 ODE'S.)
C
C           SUBROUTINE DIFFUN(T,Y,DY,N)
C           DIMENSION Y(N)
C           DIMENSION DY(N)
C
C           (FOR THE GIVEN T AND Y THAT ARE INPUT, EVALUATE DY)
C           DY(1)=...
C           DY(2)=...
C
C           DY(10)=...
C           RETURN
C           END
C
C  PARTY  - AN EXTERNAL QUANTITY (THAT IS, THE NAME OF A SUBROUTINE
C           WHICH IS PASSED AS AN ARGUMENT TO THIS SUBROUTINE).
C           IF MF=1, YOU MUST WRITE A SUBROUTINE AS DESCRIBED BELOW.
C           HOWEVER, IF MF=0 OR MF=2, YOU DON'T HAVE TO WRITE THE
C           SUBROUTINE, BUT YOU STILL MUST SUPPLY A NAME IN THE
C           PARTY POSITION IN THE CALL TO SMVODE.  USE THE
C           NAME 'PDUMMY' IN THAT CASE.  IN THE CASE MF=1, PARTY WILL BE
C           THE NAME OF THE USER-PROVIDED SUBROUTINE WHICH
C           EVALUATES THE PARTIAL DERIVATIVES OF THE RIGHT HAND
C           SIDES RHS(I) OF THE ODE'S WITH RESPECT TO EACH COMPONENT
C           Y(J) AND STORES THEM IN DERMAT(I,J).
C           THE SUBROUTINE MAY HAVE ANY NAME THE USER LIKES.  THAT
C           NAME MUST APPEAR IN AN EXTERNAL STATEMENT IN THE
C           CALLING PROGRAM, AND IN THE PARTY POSITION IN THE
C           CALL TO SMVODE.  THE SUBROUTINE MUST HAVE THE FOLLOWING
C           FORM (FOR THIS EXAMPLE, WE ASSUME THE NAME OF THE SUBROUTINE
C           IS PARFUN.)
C
C           SUBROUTINE PARFUN(T,Y,DERMAT,N)
C           DIMENSION DERMAT(N,N)
C           DIMENSION Y(N)
C
C           (FOR THE GIVEN T AND Y, EVALUATE D RHS(I)/D Y(J) )
C
C           DO 20 I=1,N
C             DO 10 J=1,N
C               DERMAT(I,J)=.....  (=D RHS(I)/D Y(J) )
C           10 CONTINUE
C           20 CONTINUE
C           RETURN
C           END
C
C
C  CALLING THE PROGRAM
C
C
C  YOU MUST HAVE AN EXTERNAL STATEMENT IN THE PROGRAM WHICH CALLS
C  THIS PROGRAM, DECLARING THE NAMES OF YOUR DERIVATIVE ROUTINE WHICH
C  YOU WILL BE USING, AND THE PARTIAL DERIVATIVE ROUTINE (OR THE NAME
C  OF THE DUMMY ROUTINE PDUMMY).
C
C  YOU MUST HAVE DIMENSION STATEMENTS IN YOUR PROGRAM FOR
C  ERROR, AND Y, GIVING THEM AT LEAST AS MUCH SPACE
C  AS DESCRIBED ABOVE.
C
C  YOU MUST SET THE VALUES OF T AND TOUT, AND THE CORRESPONDING VALUES
C  OF Y BEFORE CALLING.
C
C  YOU SHOULD SET A POSITIVE VALUE TO EPS, HMIN, AND N.
C  YOU SHOULD SET JSTART=0 ON FIRST CALL.
C
C  THEREAFTER, IF THE RESULTS OF THE CURRENT STEP ARE SATISFACTORY,
C  DON'T CHANGE ANYTHING EXCEPT TOUT, WHICH YOU SHOULD INCREASE
C  (OR DECREASE) TO THE NEXT VALUE OF T AT WHICH A SOLUTION IS
C  DESIRED.  THEN JUST CALL THE PROGRAM AGAIN TO GET THE
C  NEXT SOLUTION VALUE.
C
C***********************************************************************
C
