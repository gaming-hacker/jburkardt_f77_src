25 June      2010   9:47:50.640 AM      
 
ZIGGURAT_OPEN_MP:
  FORTRAN77 version
  The number of processors =       16
  The number of threads    =        1
 
TEST01
  SHR3 computes random integers.
  Since the output is completely determined
  by the input value of SEED, we can run in
  parallel as long as we make an array of seeds.

  The number of threads is        1
 
  Correctness check:
 
  Computing values sequentially should reach
  the same result as doing it in parallel:
 
    THREAD    Sequential      Parallel    Difference
 
         0   -1863796367   -1863796367             0
 
  Efficiency check:
 
  Computing values in parallel should be faster.
 
              Sequential      Parallel
 
      TIME:  0.638008E-01    0.648320E-01
      RATE:   156.738         154.245    
 
TEST02
  R4_UNI computes uniformly random single 
  precision real values.  Since the output 
  is completely determined by the
  input value of SEED, we can run in
  parallel as long as we make an array of 
  seeds.

  The number of threads is        1
 
  Correctness check:
 
  Computing values sequentially should reach
  the same result as doing it in parallel:
 
    THREAD    Sequential        Parallel      Difference
 
         0    0.660512E-01    0.660512E-01     0.00000    
 
  Efficiency check:
 
  Computing values in parallel should be faster.
 
              Sequential      Parallel
 
      TIME:  0.519209E-01    0.462918E-01
      RATE:   192.601         216.021    
 
TEST03
  R4_NOR computes normal random single 
  precision real values.  Since the output 
  is completely determined by the
  input value of SEED and the tables, we 
  can run in  parallel as long as we 
  make an array of seeds and share the 
  tables.

  The number of threads is        1
 
  Correctness check:
 
  Computing values sequentially should reach
  the same result as doing it in parallel:
 
    THREAD    Sequential        Parallel      Difference
 
         0   -0.326194       -0.326194         0.00000    
 
  Efficiency check:
 
  Computing values in parallel should be faster.
 
              Sequential      Parallel
 
      TIME:  0.839689E-01    0.839500E-01
      RATE:   119.092         119.118    
 
TEST04
  R4_EXP computes exponential random single 
  precision real values.  Since the output 
  is completely determined by the 
  input value of SEED and the tables, we can 
  run in parallel as long as we make
  an array of seeds and share the tables.

  The number of threads is        1
 
  Correctness check:
 
  Computing values sequentially should reach
  the same result as doing it in parallel:
 
    THREAD    Sequential        Parallel      Difference
 
         0    0.351739        0.351739         0.00000    
 
  Efficiency check:
 
  Computing values in parallel should be faster.
 
              Sequential      Parallel
 
      TIME:  0.606489E-01    0.626888E-01
      RATE:   164.883         159.518    
 
ZIGGURAT_OPEN_MP:
  Normal end of execution.
 
25 June      2010   9:47:51.173 AM      
25 June      2010   9:47:51.267 AM      
 
ZIGGURAT_OPEN_MP:
  FORTRAN77 version
  The number of processors =       16
  The number of threads    =        2
 
TEST01
  SHR3 computes random integers.
  Since the output is completely determined
  by the input value of SEED, we can run in
  parallel as long as we make an array of seeds.

  The number of threads is        2
 
  Correctness check:
 
  Computing values sequentially should reach
  the same result as doing it in parallel:
 
    THREAD    Sequential      Parallel    Difference
 
         0    1249912034    1249912034             0
         1     503020437     503020437             0
 
  Efficiency check:
 
  Computing values in parallel should be faster.
 
              Sequential      Parallel
 
      TIME:  0.638220E-01    0.268888E-01
      RATE:   156.686         371.901    
 
TEST02
  R4_UNI computes uniformly random single 
  precision real values.  Since the output 
  is completely determined by the
  input value of SEED, we can run in
  parallel as long as we make an array of 
  seeds.

  The number of threads is        2
 
  Correctness check:
 
  Computing values sequentially should reach
  the same result as doing it in parallel:
 
    THREAD    Sequential        Parallel      Difference
 
         0    0.791018        0.791018         0.00000    
         1    0.617119        0.617119         0.00000    
 
  Efficiency check:
 
  Computing values in parallel should be faster.
 
              Sequential      Parallel
 
      TIME:  0.463810E-01    0.233309E-01
      RATE:   215.606         428.616    
 
TEST03
  R4_NOR computes normal random single 
  precision real values.  Since the output 
  is completely determined by the
  input value of SEED and the tables, we 
  can run in  parallel as long as we 
  make an array of seeds and share the 
  tables.

  The number of threads is        2
 
  Correctness check:
 
  Computing values sequentially should reach
  the same result as doing it in parallel:
 
    THREAD    Sequential        Parallel      Difference
 
         0    0.977730        0.977730         0.00000    
         1    -1.07051        -1.07051         0.00000    
 
  Efficiency check:
 
  Computing values in parallel should be faster.
 
              Sequential      Parallel
 
      TIME:  0.840349E-01    0.668910E-01
      RATE:   118.998         149.497    
 
TEST04
  R4_EXP computes exponential random single 
  precision real values.  Since the output 
  is completely determined by the 
  input value of SEED and the tables, we can 
  run in parallel as long as we make
  an array of seeds and share the tables.

  The number of threads is        2
 
  Correctness check:
 
  Computing values sequentially should reach
  the same result as doing it in parallel:
 
    THREAD    Sequential        Parallel      Difference
 
         0     1.73583         1.73583         0.00000    
         1    0.502068        0.502068         0.00000    
 
  Efficiency check:
 
  Computing values in parallel should be faster.
 
              Sequential      Parallel
 
      TIME:  0.606170E-01    0.375712E-01
      RATE:   164.970         266.161    
 
ZIGGURAT_OPEN_MP:
  Normal end of execution.
 
25 June      2010   9:47:51.686 AM      
25 June      2010   9:47:51.886 AM      
 
ZIGGURAT_OPEN_MP:
  FORTRAN77 version
  The number of processors =       16
  The number of threads    =        4
 
TEST01
  SHR3 computes random integers.
  Since the output is completely determined
  by the input value of SEED, we can run in
  parallel as long as we make an array of seeds.

  The number of threads is        4
 
  Correctness check:
 
  Computing values sequentially should reach
  the same result as doing it in parallel:
 
    THREAD    Sequential      Parallel    Difference
 
         0   -1669655539   -1669655539             0
         1     108105747     108105747             0
         2   -1587791136   -1587791136             0
         3    1909075432    1909075432             0
 
  Efficiency check:
 
  Computing values in parallel should be faster.
 
              Sequential      Parallel
 
      TIME:  0.504098E-01    0.162518E-01
      RATE:   198.374         615.316    
 
TEST02
  R4_UNI computes uniformly random single 
  precision real values.  Since the output 
  is completely determined by the
  input value of SEED, we can run in
  parallel as long as we make an array of 
  seeds.

  The number of threads is        4
 
  Correctness check:
 
  Computing values sequentially should reach
  the same result as doing it in parallel:
 
    THREAD    Sequential        Parallel      Difference
 
         0    0.111253        0.111253         0.00000    
         1    0.525170        0.525170         0.00000    
         2    0.130314        0.130314         0.00000    
         3    0.944491        0.944491         0.00000    
 
  Efficiency check:
 
  Computing values in parallel should be faster.
 
              Sequential      Parallel
 
      TIME:  0.463870E-01    0.155680E-01
      RATE:   215.578         642.343    
 
TEST03
  R4_NOR computes normal random single 
  precision real values.  Since the output 
  is completely determined by the
  input value of SEED and the tables, we 
  can run in  parallel as long as we 
  make an array of seeds and share the 
  tables.

  The number of threads is        4
 
  Correctness check:
 
  Computing values sequentially should reach
  the same result as doing it in parallel:
 
    THREAD    Sequential        Parallel      Difference
 
         0   -0.828252       -0.828252         0.00000    
         1    0.314686        0.314686         0.00000    
         2   -0.989801       -0.989801         0.00000    
         3    -1.48772        -1.48772         0.00000    
 
  Efficiency check:
 
  Computing values in parallel should be faster.
 
              Sequential      Parallel
 
      TIME:  0.842519E-01    0.523651E-01
      RATE:   118.692         190.967    
 
TEST04
  R4_EXP computes exponential random single 
  precision real values.  Since the output 
  is completely determined by the 
  input value of SEED and the tables, we can 
  run in parallel as long as we make
  an array of seeds and share the tables.

  The number of threads is        4
 
  Correctness check:
 
  Computing values sequentially should reach
  the same result as doing it in parallel:
 
    THREAD    Sequential        Parallel      Difference
 
         0    0.129717        0.129717         0.00000    
         1    0.439901        0.439901         0.00000    
         2    0.834098        0.834098         0.00000    
         3    0.973891        0.973891         0.00000    
 
  Efficiency check:
 
  Computing values in parallel should be faster.
 
              Sequential      Parallel
 
      TIME:  0.606899E-01    0.293770E-01
      RATE:   164.772         340.403    
 
ZIGGURAT_OPEN_MP:
  Normal end of execution.
 
25 June      2010   9:47:52.249 AM      
