  
 ZERO_PRB
   FORTRAN77 version.
   Tests for the zero finding routines in ZERO.
  
 test01
 test subroutine rootna
  
 interval is   -2.0999999       4.0000000    
  
 estimate for root=   2.0000000    
 function value at root=   0.0000000    
  
 test02
 test subroutine zeroin
  
   Initial interval is [   -2.0999999     ,    4.0000000     ].
   F(A) =   -11.890000    
   F(B) =    18.000000    
  
   Tolerance:
   ABSERR =   9.99999975E-06
  
 estimate for root Z =   2.0000005    
   F(Z) =   3.33786033E-06
 number of steps=           6
  
 test03
 test function root
  
         root            function          method
  
   -2.099999905      -11.89000034       starting value   
    4.000000000       18.00000000       starting value   
   0.3265306950      -8.913784981       secant           
    1.999999881     -0.8344650269E-06   muller           
 tolerance was satisfied.
 number of steps=           3
  
 test04
 test rootsg
  
        root            function          method
  
   -2.099999905      -11.89000034       starting value   
    4.000000000       18.00000000       starting value   
    4.000000000       18.00000000       unspecified      
   -2.099999905      -11.89000034       unspecified      
   0.3265306950      -8.913784981       secant           
    2.163265228       1.169512153       bisection        
    1.244897962      -4.715535164       bisection        
    1.980761766     -0.1342975199       secant           
    1.999560356     -0.3077313770E-02   secant           
    2.000001192      0.8344651178E-05   secant           
 tolerance satisfied.
  
 test05
 test rootjb
  
        root            function          method
  
   -2.099999905      -11.89000034       starting value   
    4.000000000       18.00000000       starting value   
   0.3265306950      -8.913784981       secant           
    1.543175459      -2.989083290       secant           
    2.069573402      0.4918542802       inverse quadratic
    1.998063087     -0.1355463639E-01   inverse quadratic
    2.000002623      0.1835823787E-04   inverse quadratic
    2.000000000       0.000000000       inverse quadratic
 tolerance satisfied.
 number of steps=     6
  
 test06
 test subroutine fzero.
  
         root            function
  
   -2.099999905      -11.89000034    
    4.000000000       18.00000000    
    2.000008106      0.5674368731E-04
 tolerance not satisfied!
 value of iflag returned is            1
  
 test07
 test czero, which finds polynomial roots, on
 24 - 50 * x + 35 * x**2 - 10 * x**3 + x**4
  
 czero found            4  zeroes of the polynomial:
  
  value of root        value of polynomial
  
 ( 1.00000000    ,  0.0000000    ) (  0.0000000    ,  0.0000000    )
 (  2.0000007    , 1.19262239E-17) ( 7.62939453E-06, 2.38524743E-17)
 (  4.0000019    ,-5.33427469E-17) ( 3.81469727E-06,-3.20058705E-16)
 (  3.0000029    ,-5.20417043E-18) (-1.14440918E-05, 1.04083905E-17)
  
 test08
 call locmin to find minimum of a function.
  
   -2.099999905      -11.89000034       starting value   
    4.000000000       18.00000000       starting value   
   0.2299926281      -9.257125854       golden search    
  -0.6599853039      -11.54437447       golden search    
   -1.499998331      -12.25000000       parabolic fit    
   -1.499973297      -12.25000000       parabolic fit    
   -1.499973297      -12.25000000       unspecified      
 number of steps=           5
 iflag=           3
  
 test09
 test cubic which can find the complex roots of a real
 monic cubic polynomial.  the roots for the example are
 +i, -i and 3.
  
 complex roots computed by cubic:
  
   3.0000000       0.0000000    
   0.0000000      0.99999994    
   0.0000000     -0.99999994    
  
 test10
 test drpoly, which finds the roots of a real
 polynomial, using double precision.
  
 this test involves a polynomial of degree            2
  
 drpoly has found the full set of roots.
  
 here are the (possibly complex) roots:
  
  1.00000000000000000        0.0000000000000000     
   2.0000000000000000        0.0000000000000000     
  
 this test involves a polynomial of degree            4
  
 drpoly could not find all the roots.
 drpoly found only            0  roots, out of a total
 number of            4  that were sought.
  
 here are the (possibly complex) roots:
  
  
 test11
 test rpoly, which finds the roots of a real
 polynomial, using single precision.
  
 this test involves a polynomial of degree            2
  
 rpoly has found the full set of roots.
  
 here are the (possibly complex) roots:
  
  1.00000000       0.0000000    
   2.0000000       0.0000000    
  
 this test involves a polynomial of degree            4
  
 rpoly has found the full set of roots.
  
 here are the (possibly complex) roots:
  
  0.70710677      0.70710683    
  0.70710677     -0.70710683    
 -0.70710677      0.70710665    
 -0.70710677     -0.70710665    
  
 test12
 test dcpoly, which finds the roots of a complex
 polynomial, using double precision.
  
 this test involves a polynomial of degree            2
  
 dcpoly has found the full set of roots.
  
 here are the roots:
  
  0.99999999999999989       2.38221134272575529E-017
   2.0000000000000000      -2.38221134272575529E-017
  
 this test involves a polynomial of degree            4
  
 dcpoly has found the full set of roots.
  
 here are the roots:
  
 -0.70710678118654746       0.70710678118654757     
 -0.70710678118654757      -0.70710678118654746     
  0.70710678118654757       0.70710678118654735     
  0.70710678118654735      -0.70710678118654746     
  
 test13
 test cpoly, which finds the roots of a complex
 polynomial, using single precision.
  
 this test involves a polynomial of degree            2
  
 cpoly has found the full set of roots.
  
 here are the roots:
  
   1.0000006     -2.69967131E-07
   1.9999994      2.69967131E-07
  
 this test involves a polynomial of degree            4
  
 cpoly has found the full set of roots.
  
 here are the roots:
  
 -0.70710611      0.70710737    
 -0.70710737     -0.70710611    
  0.70710737      0.70710605    
  0.70710605     -0.70710731    
  
 ZERO_PRB
   Normal end of execution.
