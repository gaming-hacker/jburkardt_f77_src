==407== Memcheck, a memory error detector
==407== Copyright (C) 2002-2010, and GNU GPL'd, by Julian Seward et al.
==407== Using Valgrind-3.6.1 and LibVEX; rerun with -h for copyright info
==407== Command: test01
==407== 
--407-- run: /usr/bin/dsymutil "./test01"
==407== Invalid write of size 4
==407==    at 0x100000913: f_ (test01.f:77)
==407==    by 0x100000BFF: MAIN__ (test01.f:32)
==407==    by 0x100000DBB: main (test01.f:41)
==407==  Address 0x10044a3f8 is 0 bytes after a block of size 40 alloc'd
==407==    at 0x1000161EF: malloc (vg_replace_malloc.c:236)
==407==    by 0x10000076F: f_ (test01.f:68)
==407==    by 0x100000BFF: MAIN__ (test01.f:32)
==407==    by 0x100000DBB: main (test01.f:41)
==407== 
==407== Invalid read of size 4
==407==    at 0x1000F1CA0: extract_int (in /usr/local/lib/libgfortran.3.dylib)
==407==    by 0x100000DFF: main (in ./test01)
==407==  Address 0x10044a3f8 is 0 bytes after a block of size 40 alloc'd
==407==    at 0x1000161EF: malloc (vg_replace_malloc.c:236)
==407==    by 0x10000076F: f_ (test01.f:68)
==407==    by 0x100000BFF: MAIN__ (test01.f:32)
==407==    by 0x100000DBB: main (test01.f:41)
==407== 
 
TEST01
  FORTRAN77 version.
  A sample code for analysis by VALGRIND.
   1   1
   2   1
   3   2
   4   3
   5   5
   6   8
   7  13
   8  21
   9  34
  10  55
  11  89
 
TEST01
  Normal end of execution.
==407== 
==407== HEAP SUMMARY:
==407==     in use at exit: 88 bytes in 1 blocks
==407==   total heap usage: 24 allocs, 23 frees, 27,750 bytes allocated
==407== 
==407== LEAK SUMMARY:
==407==    definitely lost: 0 bytes in 0 blocks
==407==    indirectly lost: 0 bytes in 0 blocks
==407==      possibly lost: 0 bytes in 0 blocks
==407==    still reachable: 88 bytes in 1 blocks
==407==         suppressed: 0 bytes in 0 blocks
==407== Rerun with --leak-check=full to see details of leaked memory
==407== 
==407== For counts of detected and suppressed errors, rerun with: -v
==407== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
