==1628== Memcheck, a memory error detector
==1628== Copyright (C) 2002-2010, and GNU GPL'd, by Julian Seward et al.
==1628== Using Valgrind-3.6.1 and LibVEX; rerun with -h for copyright info
==1628== Command: test02
==1628== 
--1628-- run: /usr/bin/dsymutil "./test02"
==1628== Conditional jump or move depends on uninitialised value(s)
==1628==    at 0x1000EF23B: _gfortrani_write_i (in /usr/local/lib/libgfortran.3.dylib)
==1628==    by 0x100000E1F: main (in ./test02)
==1628== 
==1628== Conditional jump or move depends on uninitialised value(s)
==1628==    at 0x1000EBE57: calculate_sign.isra.0 (in /usr/local/lib/libgfortran.3.dylib)
==1628==    by 0x100000E1F: main (in ./test02)
==1628== 
==1628== Conditional jump or move depends on uninitialised value(s)
==1628==    at 0x1000EBEBB: gfc_itoa (in /usr/local/lib/libgfortran.3.dylib)
==1628==    by 0x7FFF5FBFF5AF: ???
==1628==    by 0x1: ???
==1628==    by 0x7FFF5FBFF5AF: ???
==1628==    by 0xFFFFFFFE: ???
==1628== 
==1628== Conditional jump or move depends on uninitialised value(s)
==1628==    at 0x1000EBEC0: gfc_itoa (in /usr/local/lib/libgfortran.3.dylib)
==1628==    by 0x7FFF5FBFF5AF: ???
==1628==    by 0x1: ???
==1628==    by 0x7FFF5FBFF5AF: ???
==1628==    by 0xFFFFFFFE: ???
==1628==    by 0xFFFFFFFFBF7FF35F: ???
==1628==    by 0xFFFFFFFFFFFFFFFE: ???
==1628==    by 0x1000E6FAF: formatted_transfer (in /usr/local/lib/libgfortran.3.dylib)
==1628==    by 0x1000EF328: _gfortrani_write_i (in /usr/local/lib/libgfortran.3.dylib)
==1628==    by 0x100440C41: ???
==1628==    by 0x100000000: ??? (in ./test02)
==1628== 
==1628== Conditional jump or move depends on uninitialised value(s)
==1628==    at 0x1002C9B41: __udivmodti4 (in /usr/lib/libSystem.B.dylib)
==1628== 
==1628== Conditional jump or move depends on uninitialised value(s)
==1628==    at 0x1000EBF0D: gfc_itoa (in /usr/local/lib/libgfortran.3.dylib)
==1628== 
==1628== Conditional jump or move depends on uninitialised value(s)
==1628==    at 0x1000EBF0D: gfc_itoa (in /usr/local/lib/libgfortran.3.dylib)
==1628==    by 0xFF: ???
==1628== 
==1628== Conditional jump or move depends on uninitialised value(s)
==1628==    at 0x1000EBF0D: gfc_itoa (in /usr/local/lib/libgfortran.3.dylib)
==1628==    by 0x10012: ???
==1628== 
==1628== Conditional jump or move depends on uninitialised value(s)
==1628==    at 0x1000EBF0D: gfc_itoa (in /usr/local/lib/libgfortran.3.dylib)
==1628==    by 0x10012FF: ???
==1628== 
==1628== Conditional jump or move depends on uninitialised value(s)
==1628==    at 0x1000EBF0D: gfc_itoa (in /usr/local/lib/libgfortran.3.dylib)
==1628==    by 0x100130033: ??? (in /usr/local/lib/libgfortran.3.dylib)
==1628== 
==1628== Conditional jump or move depends on uninitialised value(s)
==1628==    at 0x1000EBF0D: gfc_itoa (in /usr/local/lib/libgfortran.3.dylib)
==1628==    by 0x10013003435: ???
==1628== 
==1628== Use of uninitialised value of size 8
==1628==    at 0x100011556: strlen (mc_replace_strmem.c:282)
==1628==    by 0x1000EF340: _gfortrani_write_i (in /usr/local/lib/libgfortran.3.dylib)
==1628==    by 0x100000E1F: main (in ./test02)
==1628== 
==1628== Conditional jump or move depends on uninitialised value(s)
==1628==    at 0x100011559: strlen (mc_replace_strmem.c:282)
==1628==    by 0x1000EF340: _gfortrani_write_i (in /usr/local/lib/libgfortran.3.dylib)
==1628==    by 0x100000E1F: main (in ./test02)
==1628== 
==1628== Use of uninitialised value of size 8
==1628==    at 0x100011563: strlen (mc_replace_strmem.c:282)
==1628==    by 0x1000EF340: _gfortrani_write_i (in /usr/local/lib/libgfortran.3.dylib)
==1628==    by 0x100000E1F: main (in ./test02)
==1628== 
==1628== Conditional jump or move depends on uninitialised value(s)
==1628==    at 0x100011567: strlen (mc_replace_strmem.c:282)
==1628==    by 0x1000EF340: _gfortrani_write_i (in /usr/local/lib/libgfortran.3.dylib)
==1628==    by 0x100000E1F: main (in ./test02)
==1628== 
 
TEST02:
  FORTRAN77 version
  A sample code for analysis by VALGRIND.
   1   0
   2   2
   3   0
   4   6
   5   8
   6   0
   7   0
   8   0
   9  **
  10  **
 
TEST02
  Normal end of execution.
==1628== 
==1628== HEAP SUMMARY:
==1628==     in use at exit: 88 bytes in 1 blocks
==1628==   total heap usage: 23 allocs, 22 frees, 27,710 bytes allocated
==1628== 
==1628== LEAK SUMMARY:
==1628==    definitely lost: 0 bytes in 0 blocks
==1628==    indirectly lost: 0 bytes in 0 blocks
==1628==      possibly lost: 0 bytes in 0 blocks
==1628==    still reachable: 88 bytes in 1 blocks
==1628==         suppressed: 0 bytes in 0 blocks
==1628== Rerun with --leak-check=full to see details of leaked memory
==1628== 
==1628== For counts of detected and suppressed errors, rerun with: -v
==1628== Use --track-origins=yes to see where uninitialised values come from
==1628== ERROR SUMMARY: 71 errors from 15 contexts (suppressed: 0 from 0)
