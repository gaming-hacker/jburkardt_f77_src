<html>

  <head>
    <title>
      SPARSE_GRID_CC - title goes here.
    </title>
  </head>

  <body bgcolor="#EEEEEE" link="#CC0000" alink="#FF3300" vlink="#000055">

    <h1 align = "center">
      SPARSE_GRID_CC <br> heading goes here.
    </h1>

    <hr>

    <p>
      <b>SPARSE_GRID_CC</b>
      is a FORTRAN77 (program/library) which
      (description goes here).
    </p>

    <h3 align = "center">
      Usage:
    </h3>

    <h3 align = "center">
      Licensing:
    </h3>

    <p>
      The computer code and data files described and made available on this
      web page are distributed under
      <a href = "../../txt/gnu_lgpl.txt">the GNU LGPL license.</a>
    </p>

    <h3 align = "center">
      Languages:
    </h3>

    <p>
      <b>SPARSE_GRID_CC</b> is available in
      <a href = "../../f77_src/sparse_grid_cc/sparse_grid_cc.html">a FORTRAN77 version</a>.
    </p>

    <h3 align = "center">
      Related Data and Programs:
    </h3>

    <h3 align = "center">
      Reference:
    </h3>

    <p>
      <ol>
        <li>
          
        </li>
      </ol>
    </p>

    <h3 align = "center">
      Source Code:
    </h3>

    <p>
      <ul>
        <li>
          <a href = "sparse_grid_cc.f">sparse_grid_cc.f</a>, the source code.
        </li>
        <li>
          <a href = "sparse_grid_cc.sh">sparse_grid_cc.sh</a>,
          BASH commands to compile the source code.
        </li>
      </ul>
    </p>

    <h3 align = "center">
      Examples and Tests:
    </h3>

    <p>
      <ul>
        <li>
          <a href = "sparse_grid_cc_prb.f">sparse_grid_cc_prb.f</a>,
          a sample calling program.
        </li>
        <li>
          <a href = "sparse_grid_cc_prb.sh">sparse_grid_cc_prb.sh</a>,
          BASH commands to compile and run the sample program.
        </li>
        <li>
          <a href = "sparse_grid_cc_prb_output.txt">sparse_grid_cc_prb_output.txt</a>,
          the output file.
        </li>
      </ul>
    </p>

    <h3 align = "center">
      List of Routines:
    </h3>

    <p>
      <ul>
        <li>
          <b>ABSCISSA_LEVEL_CLOSED_ND:</b> first level at which given abscissa is generated.
        </li>
        <li>
          <b>CC_ABSCISSA</b> returns the I-th abscissa for the Clenshaw Curtis rule.
        </li>
        <li>
          <b>CC_WEIGHTS</b> computes Clenshaw Curtis weights.
        </li>
        <li>
          <b>COMP_NEXT</b> computes the compositions of the integer N into K parts.
        </li>
        <li>
          <b>GET_UNIT</b> returns a free FORTRAN unit number.
        </li>
        <li>
          <b>I4_CHOOSE</b> computes the binomial coefficient C(N,K).
        </li>
        <li>
          <b>I4_MODP</b> returns the nonnegative remainder of integer division.
        </li>
        <li>
          <b>I4_MOP</b> returns the I-th power of -1 as an I4 value.
        </li>
        <li>
          <b>I4VEC_EQ</b> is true if every pair of entries in two I4VECs is equal.
        </li>
        <li>
          <b>I4VEC_PRODUCT</b> returns the product of the entries of an I4VEC.
        </li>
        <li>
          <b>INDEX_TO_LEVEL_CLOSED</b> determines the level of a point given its index.
        </li>
        <li>
          <b>LEVEL_TO_ORDER_CCS:</b> level to order for CCS rule.
        </li>
        <li>
          <b>LEVEL_TO_ORDER_CLOSED</b> converts a level to an order for closed rules.
        </li>
        <li>
          <b>LEVELS_CLOSED_INDEX</b> computes closed grids with 0 .le. LEVEL .le. LEVEL_MAX.
        </li>
        <li>
          <b>MONOMIAL_INT01</b> returns the integral of a monomial over the [0,1] hypercube.
        </li>
        <li>
          <b>MONOMIAL_QUADRATURE</b> applies a quadrature rule to a monomial.
        </li>
        <li>
          <b>MONOMIAL_VALUE</b> evaluates a monomial.
        </li>
        <li>
          <b>MULTIGRID_INDEX0</b> returns an indexed multidimensional grid.
        </li>
        <li>
          <b>MULTIGRID_SCALE_CLOSED</b> renumbers a grid as a subgrid on a higher level.
        </li>
        <li>
          <b>PRODUCT_WEIGHTS_CC:</b> Clenshaw Curtis product rule weights.
        </li>
        <li>
          <b>R8_HUGE</b> returns a "huge" R8.
        </li>
        <li>
          <b>R8MAT_WRITE</b> writes a R8MAT file.
        </li>
        <li>
          <b>R8VEC_DIRECT_PRODUCT2</b> creates a direct product of R8VEC's.
        </li>
        <li>
          <b>R8VEC_DOT_PRODUCT</b> finds the dot product of a pair of R8VEC's.
        </li>
        <li>
          <b>R8VEC_SUM</b> sums the entries of an R8VEC.
        </li>
        <li>
          <b>S_BLANK_DELETE</b> removes blanks from a string, left justifying the remainder.
        </li>
        <li>
          <b>S_LEN_TRIM</b> returns the length of a string to the last nonblank.
        </li>
        <li>
          <b>SPARSE_GRID_CC</b> computes a sparse grid of Clenshaw Curtis points. 
        </li>
        <li>
          <b>SPARSE_GRID_CC_INDEX</b> indexes the points forming a sparse grid.
        </li>
        <li>
          <b>SPARSE_GRID_CC_WEIGHTS</b> gathers the weights.
        </li>
        <li>
          <b>SPARSE_GRID_CCS_SIZE</b> sizes a sparse grid using Clenshaw Curtis Slow rules.
        </li>
        <li>
          <b>SPARSE_GRID_CC_SIZE</b> sizes a sparse grid using Closed Fully Nested rules.
        </li>
        <li>
          <b>TIMESTAMP</b> prints out the current YMDHMS date as a timestamp.
        </li>
        <li>
          <b>VEC_COLEX_NEXT2</b> generates vectors in colex order.
        </li>
      </ul>
    </p>

    <p>
      You can go up one level to <a href = "../f77_src.html">
      the FORTRAN77 source codes</a>.
    </p>

    <hr>

    <i>
      Last revised on Tue Mar 12 15:04:20 2013
    </i>

    <!-- John Burkardt -->

  </body>

  <!-- Initial HTML skeleton created by HTMLINDEX. -->

</html>
